ins: cckState
out: cckState
do:
  - parallel:
      - |collectionName <-- cckState.schema.collectionName
      - |user <-- cckState.auth.id
      - |showHistory <-- cckState.showHistory
      - |excludeDeleted <-- cckState.excludeDeleted
      - |data <-- cckState.data

  - |option <-- {}
  - if: |$.util.isNullOrUndefined(cckState.documentId)
    do: |option <-- {multi:1}

  # run query
  - |dbConfig <-- ({collectionName, dbOption:{excludeDeleted, showHistory, user}})
  - |(cckState.request.get, cckState.fieldNames) -> {$.helper.getSubObject} -> requestFilter
  - |(requestFilter, cckState.filter) -> {$.cck.getCombinedFilter} -> filter
  - if: |excludeDeleted
    do:
      - |(dbConfig, 'softRemove', filter, option) -> [$.helper.mongoExecute] -> result
    else:
      - |(dbConfig, 'remove', filter, option) -> [$.helper.mongoExecute] -> result

  - |cckState.result.result <-- result