ins: cckState
out: cckState
do:
  - parallel:
      - |collectionName <-- cckState.schema.collectionName
      - |user <-- cckState.auth.id
      - |limit <-- cckState.limit
      - |skip <-- cckState.offset
      - |showHistory <-- cckState.showHistory
      - |excludeDeleted <-- cckState.excludeDeleted

  # run query
  - parallel:
      - |dbConfig <-- ({collectionName, dbOption:{excludeDeleted, showHistory, user}})
      - |(cckState.filter, cckState.data) -> {$.cck.getCombinedFilter} -> filter
  - |(dbConfig, 'find', filter, {limit, skip}) -> [$.helper.mongoExecute] -> results

  # get only shown results
  - |(results, cckState.fieldNames) -> {$.cck.getShownDocument} -> results

  # assign the result
  - if: |$.util.isString(cckState.documentId)
    do:
      - if: |results.length > 0
        do:
          - |cckState.result.result <-- results[0]
        else:
          - parallel:
              - |cckState.result.result <-- {}
              - |cckState.result.status <-- 400
              - |cckState.result.userMessage <-- 'Data not found'
              - |cckState.result.developerMessage <-- 'Resource not found: Data does not exist or has been deleted, or query is wrong'
    else: |cckState.result.results <-- results
