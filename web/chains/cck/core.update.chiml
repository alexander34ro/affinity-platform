ins: state
out: response
do:
  - |(state) -> [$.cck.getInitialState] -> cckState

  # authorization checking
  - if: |!$.helper.isAuthorized(state.request, cckState.schema.updateGroups)
    do:
      - ins:
          developerMessage: 'Unauthorized'
          userMessage: 'Unauthorized'
          status: 401
        out: cckState.result

  # field validity checking
  - |(cckState) -> [$.cck.getUpdateValidity] -> validity
  - if: |!validity.status
    do:
      - ins:
          developerMessage: validity.messages 
          userMessage: 'Invalid Column Value'
          status: 400
        out: cckState.result

  # do pre-processing
  - if: |cckState.result.status < 400 && !$.util.isNullOrUndefined(cckState.schema.beforeUpdateChain)
    do: |(cckState.schema.beforeUpdateChain, cckState) -> [$.runChain] -> cckState

  # do update
  - if: |cckState.result.status < 400 && !$.util.isNullOrUndefined(cckState.schema.updateChain)
    do: |(cckState.schema.updateChain, cckState) -> [$.runChain] -> cckState

  # do post-processing
  - if: |cckState.result.status < 400 && !$.util.isNullOrUndefined(cckState.schema.afterUpdateChain)
    do: |(cckState.schema.afterUpdateChain, cckState) -> [$.runChain] -> cckState

  - |response.status <-- cckState.result.status
  - |response.data <-- cckState.result